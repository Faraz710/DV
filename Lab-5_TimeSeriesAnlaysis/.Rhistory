knitr::opts_chunk$set(echo = TRUE)
data1 <- read.csv("covidindia.csv")
data1 <- read.csv("covid_19_india.csv")
data1$Date <- as.Date(data1$Date,"%d-%b-%y")
head(data1)
library(ggplot2)
library(dplyr)
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
library("TTR")
library(forecast)
library(magick)
data1 <- read.csv("covid_india.csv")
data1$Date <- as.Date(data1$Date,"%d-%b-%y")
head(data1)
library(ggplot2)
library(dplyr)
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
library("TTR")
library(forecast)
library(magick)
library(ggplot2)
library(dplyr)
data1 <- read.csv("covid_india.csv")
data1$Date <- as.Date(data1$Date,"%d-%b-%y")
head(data1)
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
library("TTR")
library(forecast)
library(magick)
library(ggplot2)
library(dplyr)
data1 <- read.csv("case_time_series.csv")
data1$Date <- as.Date(data1$Date,"%d-%b-%y")
head(data1)
library("TTR")
library(forecast)
library(magick)
library(ggplot2)
library(dplyr)
data1 <- read.csv("covidindia.csv")
data1$Date <- as.Date(data1$Date,"%d-%b-%y")
head(data1)
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
p <- ggplot(data1, aes(x=Date, y=Daily.Deceased)) +
geom_line() + xlab("")
p+ ylim(0, 5000)
p <- ggplot(data1, aes(x=Date, y=Daily.Recovered)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
library("TTR")
library(forecast)
library(magick)
library(ggplot2)
library(dplyr)
data1 <- read.csv("covidindia.csv")
data1$Date <- as.Date(data1$Date,"%d-%b-%y")
head(data1)
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
p <- ggplot(data1, aes(x=Date, y=Daily.Deceased)) +
geom_line() + xlab("")
p+ ylim(0, 5000)
p <- ggplot(data1, aes(x=Date, y=Daily.Recovered)) +
geom_line() + xlab("")
p+ ylim(0, 500000)
data1$death.rate<- data1$Daily.Deceased / data1$Daily.Confirmed
deathRatetotal = max(data1$Total.Deceased, na.rm = TRUE) / max(data1$Total.Confirmed, na.rm = TRUE)
print(":  Total death rate")
print(deathRatetotal)
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + ylab("2020 Daily Confirmed")
p+ scale_x_date(limits = as.Date(c("2020-01-30", "2020-12-31")))
p <- ggplot(data1, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + ylab("2021 Daily Confirmed")
p+ scale_x_date(limits = as.Date(c("2021-01-01", "2021-10-31")))
p <- ggplot(data1, aes(x=Date, y=Daily.Deceased)) +
geom_line() + ylab("2020 daily Confirmed")
p+ scale_x_date(limits = as.Date(c("2020-01-30", "2020-12-31")))
p <- ggplot(data1, aes(x=Date, y=Daily.Deceased)) +
geom_line() + ylab("2021 daily Confirmed")
p+ scale_x_date(limits = as.Date(c("2021-01-01", "2021-10-31")))
p <- ggplot(data1, aes(x=Date, y=Daily.Recovered)) +
geom_line() + ylab("2020 daily Recovered")
p+ scale_x_date(limits = as.Date(c("2020-01-30", "2020-12-31")))
p <- ggplot(data1, aes(x=Date, y=Daily.Recovered)) +
geom_line() + ylab("2021 daily Recovered")
p+ scale_x_date(limits = as.Date(c("2021-01-01", "2021-10-31")))
fit <- auto.arima(data1$Daily.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily cases Confirmed",
col.main = "darkgreen")
fit <- auto.arima(data1$Daily.Deceased)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily Deceased",
col.main = "darkgreen")
fit <- auto.arima(data1$Daily.Recovered)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily Recovered",
col.main = "darkgreen")
#Simple moving average
SMA1 <- SMA(data1$Daily.Confirmed,n=31)
plot.ts(SMA1,ylab="SMA Daily Confirmed prediction")
#Exponential Moving Average
ema <-EMA(data1$Daily.Confirmed,n=31)
plot.ts(ema,ylab="EMA Daily Confirmed prediction")
# ARIMA
fit <- auto.arima(data1$Daily.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, ylab = "ARIMA Daily Confirmed prediction",
col.main = "darkgreen")
fit <- auto.arima(data1$Total.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Forecasting of upcoming Wave Total cases Confirmed",
col.main = "darkgreen")
fit <- auto.arima(data1$Total.Deceased)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Forecasting of upcoming Wave Total Deceased",
col.main = "darkgreen")
fit <- auto.arima(data1$Total.Recovered)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Forecasting of upcoming Wave Total Recovered",
col.main = "darkgreen")
knitr::opts_chunk$set(echo = TRUE)
library("TTR")
library(forecast)
library(magick)
library(ggplot2)
library(dplyr)
india <- read.csv("covid_india.csv")
india$Date <- as.Date(india$Date,"%d-%b-%y")
head(india)
ggplot(india, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + xlab("") + ylim(0, 500000)
ggplot(india, aes(x=Date, y=Daily.Deceased)) +
geom_line() + xlab("") + ylim(0, 5000)
ggplot(india, aes(x=Date, y=Daily.Recovered)) +
geom_line() + xlab("") + ylim(0, 500000)
india$death.rate<- india$Daily.Deceased / data1$Daily.Confirmed
deathRatetotal = max(india$Total.Deceased, na.rm = TRUE) / max(india$Total.Confirmed, na.rm = TRUE)
print("Total death rate: ")
print(deathRatetotal)
ggplot(india, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + ylab("2020 Daily Confirmed") + scale_x_date(limits = as.Date(c("2020-01-30", "2020-12-31")))
ggplot(india, aes(x=Date, y=Daily.Confirmed)) +
geom_line() + ylab("2021 Daily Confirmed") + scale_x_date(limits = as.Date(c("2021-01-01", "2021-10-31")))
ggplot(india, aes(x=Date, y=Daily.Deceased)) +
geom_line() + ylab("2020 daily Confirmed") + scale_x_date(limits = as.Date(c("2020-01-30", "2020-12-31")))
ggplot(india, aes(x=Date, y=Daily.Deceased)) +
geom_line() + ylab("2021 daily Confirmed") + scale_x_date(limits = as.Date(c("2021-01-01", "2021-10-31")))
ggplot(india, aes(x=Date, y=Daily.Recovered)) +
geom_line() + ylab("2020 daily Recovered") + scale_x_date(limits = as.Date(c("2020-01-30", "2020-12-31")))
ggplot(india, aes(x=Date, y=Daily.Recovered)) +
geom_line() + ylab("2021 daily Recovered") + scale_x_date(limits = as.Date(c("2021-01-01", "2021-10-31")))
fit <- auto.arima(india$Daily.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily cases Confirmed",
col.main = "darkgreen")
fit <- auto.arima(india$Daily.Deceased)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily Deceased",
col.main = "darkgreen")
fit <- auto.arima(india$Daily.Recovered)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily Recovered",
col.main = "darkgreen")
fit <- auto.arima(india$Daily.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily cases Confirmed",
col.main = "blue")
fit <- auto.arima(india$Daily.Deceased)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily Deceased",
col.main = "blue")
fit <- auto.arima(india$Daily.Recovered)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Graph with forecasting of upcoming Wave Daily Recovered",
col.main = "blue")
#Simple moving average
SMA1 <- SMA(india$Daily.Confirmed,n=31)
plot.ts(SMA1,ylab="SMA Daily Confirmed prediction")
#Exponential Moving Average
ema <-EMA(india$Daily.Confirmed,n=31)
plot.ts(ema,ylab="EMA Daily Confirmed prediction")
# ARIMA
fit <- auto.arima(india$Daily.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, ylab = "ARIMA Daily Confirmed prediction",
col.main = "darkgreen")
#Simple moving average
SMA1 <- SMA(india$Daily.Confirmed,n=31)
plot.ts(SMA1,ylab="SMA Daily Confirmed prediction",
col.main = "blue")
#Exponential Moving Average
ema <-EMA(india$Daily.Confirmed,n=31)
plot.ts(ema,ylab="EMA Daily Confirmed prediction",
col.main = "blue")
# ARIMA
fit <- auto.arima(india$Daily.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, ylab = "ARIMA Daily Confirmed prediction",
col.main = "blue")
fit <- auto.arima(india$Total.Confirmed)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Forecasting of upcoming Wave Total cases Confirmed",
col.main = "blue")
fit <- auto.arima(data1$Total.Deceased)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Forecasting of upcoming Wave Total Deceased",
col.main = "blue")
fit <- auto.arima(data1$Total.Recovered)
forecastedValues <- forecast(fit, 31)
plot(forecastedValues, main = "Forecasting of upcoming Wave Total Recovered",
col.main = "blue")
